name: リリース処理

on:
  release:
    types: [created, edited]
  push:
    tags:
      - 'v*'  # 当推送v开头的标签时触发

jobs:
  update-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: リリースタグとバージョンの取得
        id: get_version
        run: |
          # github.event.release.tag_name用于release事件
          # github.ref用于push tags事件
          if [[ "${{ github.event_name }}" == "release" ]]; then
            RELEASE_TAG="${{ github.event.release.tag_name }}"
          else
            RELEASE_TAG="${{ github.ref }}"
            # 从refs/tags/v1.0.0格式中提取标签名
            RELEASE_TAG="${RELEASE_TAG#refs/tags/}"
          fi
          
          # タグからvを削除 (例: v1.0.0 -> 1.0.0)
          VERSION="${RELEASE_TAG#v}"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=tag::$RELEASE_TAG"
      
      - name: CHANGELOGから変更履歴を抽出
        id: get_changelog
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "CHANGELOGファイルが見つかりません"
            exit 1
          fi
          
          # 读取整个CHANGELOG.md文件内容
          CHANGELOG_CONTENT=$(cat CHANGELOG.md)
          
          # 改行をGitHubのフォーマットに変換
          CHANGELOG_CONTENT="${CHANGELOG_CONTENT//'%'/'%25'}"
          CHANGELOG_CONTENT="${CHANGELOG_CONTENT//$'\n'/'%0A'}"
          CHANGELOG_CONTENT="${CHANGELOG_CONTENT//$'\r'/'%0D'}"
          
          echo "::set-output name=content::$CHANGELOG_CONTENT"
      
      - name: リリースノートを更新
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.tag }}
          body: |
            ${{ steps.get_changelog.outputs.content }}
          token: ${{ secrets.GITHUB_TOKEN }} 